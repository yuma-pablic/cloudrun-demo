prometheus.exporter.postgres "example" {
  data_source_names = ["postgresql://admin:admin@db:5432/app?sslmode=disable"]
}

prometheus.scrape "default" {
  targets    = prometheus.exporter.postgres.example.targets
  forward_to = [prometheus.remote_write.demo.receiver]
}

prometheus.remote_write "demo" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

prometheus.exporter.unix "demo" { }

prometheus.scrape "demo" {
  targets    = prometheus.exporter.unix.demo.targets
  forward_to = [prometheus.remote_write.demo.receiver]
}

prometheus.scrape "app" {
  targets = [
    {"__address__" = "host.docker.internal:8080"},
  ]
  metrics_path = "/metrics"
  scrape_interval = "15s"
  forward_to = [prometheus.remote_write.demo.receiver]
}

loki.source.file "app" {
  targets = [
    {
      __path__ = "/logs/app.log",
      job      = "app",
    },
  ]

  forward_to = [loki.write.default.receiver]
}

loki.write "default" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

loki.process "app" {
 stage.json  {
    expressions = {
      time  = "time",
      level = "level",
      msg   = "msg",
    }
  }

  stage.timestamp  {
    source = "time"
    format = "2006-01-02T15:04:05.000000Z07:00"
  }

  stage.labels  {
    values = {
      level = "INFO",
    }
  }

  forward_to = [loki.write.default.receiver]
}

pyroscope.scrape "myapp" {
  targets = ["http://host.docker.internal:4040"] # ← Appのpyroscope endpoint
  application_name = "myapp.local"
}

pyroscope.write "default" {
  endpoint = "http://pyroscope:4040" # ← Pyroscope サーバーのURL
}

pyroscope.relabel "default" {
  forward_to = [pyroscope.write.default.receiver]
}

pyroscope.scrape.myapp.forward_to = [pyroscope.relabel.default.receiver]